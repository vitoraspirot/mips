----------------------------------------------------------------------------------
-- Company: UERGS
-- Engineer: Vitor Aspirot
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.all;
use IEEE.NUMERIC_STD.ALL;
library mito;
use mito.mito_pkg.all;

entity memory is
	port(		
        clk                 : in  std_logic;
        rst                 : in  std_logic;
        escrita             : in  std_logic;        
        entrada_memoria     : in  std_logic_vector(15 downto 0);
        endereco_memoria    : in  std_logic_vector(6  downto 0);
        saida_memoria       : out std_logic_vector(15 downto 0)
        );
        
end memory;

architecture rtl of memory is

	-- 256 words of 4 bytes (32 bits)
	subtype palavra is std_logic_vector(15 downto 0);
	type memory is array (0 to 127) of palavra;
	signal mem : memory;
	
begin 

process(clk)	
begin
			
	if(rst = '1') then			 
	        mem(0)    <= "0100010000001111"; -- lw r1 mem[15] (9)
			mem(1)    <= "0100100000010000"; -- lw r2 mem[16] (6)  
			mem(2)    <= "0000110010100000"; -- add r3 r1 r2 -- r3 tem 15  
			mem(3)    <= "1100010110001110"; -- addst r1 r3 mem[14] -- 14 tem 24
			mem(4)    <= "0101000000001110"; -- lw r4 mem[14] (24) 	
			mem(5)    <= "0011011000110000"; -- sub r5 r4 r3 -- 24 - 15 = 9 	 
			mem(6)    <= "1011010010001000"; -- beq r5 r1 mem[8]
			mem(7)    <= "1111111111111111"; -- halt	 
			mem(8)    <= "0011101010100000"; -- sub r6 r5 r2	 	
			mem(9)    <= "0110001100010100"; -- sw r6 mem[20]	 	
			mem(10)   <= "1111111111111111"; -- halt	 
			mem(11)   <= "0000000000000000"; 	
			mem(12)   <= "0000000000000000";
			mem(13)   <= "0000000000000000";
			mem(14)   <= "0000000000000000"; -- DEVE POSSUIR 24
			mem(15)   <= "0000000000001001"; -- 9	 
			mem(16)   <= "0000000000000110"; -- 6	
			mem(17)   <= "0000000000000000";	
			mem(18)   <= "0000000000000000"; 	
			mem(19)   <= "0000000000000000";     
			mem(20)   <= "0000000000000000"; -- deve possuir 3
			mem(21)   <= "0000000000000000"; 
			mem(22)   <= "0000000000000000";
			mem(23)   <= "0000000000000000";
			mem(24)   <= "0000000000000000"; 
			mem(25)   <= "0000000000000000"; 
			mem(26)   <= "0000000000000000"; 
			mem(27)   <= "0000000000000000";      
			mem(28)   <= "0000000000000000"; 
			mem(29)   <= "0000000000000000"; 
			mem(30)   <= "0000000000000000"; 
			mem(31)   <= "0000000000000000"; 
			mem(32)   <= "0000000000000000";  
			mem(33)   <= "0000000000000000"; 
			mem(34)   <= "0000000000000000"; 
			mem(35)   <= "0000000000000000";
			mem(36)   <= "0000000000000000";
			mem(37)   <= "0000000000000000";
			mem(38)   <= "0000000000000000";
			mem(39)   <= "0000000000000000";
			mem(40)   <= "0000000000000000";
			mem(41)   <= "0000000000000000";
			mem(42)   <= "0000000000000000";
			mem(43)   <= "0000000000000000";
			mem(44)   <= "0000000000000000";
			mem(45)   <= "0000000000000000";
			mem(46)   <= "0000000000000000";
			mem(47)   <= "0000000000000000";
			mem(48)   <= "0000000000000000";
			mem(49)   <= "0000000000000000";
			mem(50)   <= "0000000000000000";
			mem(51)   <= "0000000000000000"; 
			mem(52)   <= "0000000000000000";
			mem(53)   <= "0000000000000000";
			mem(54)   <= "0000000000000000";
			mem(55)   <= "0000000000000000";
			mem(56)   <= "0000000000000000";
			mem(57)   <= "0000000000000000";
			mem(58)   <= "0000000000000000";
			mem(59)   <= "0000000000000000";
			mem(60)   <= "0000000000000000";
			mem(61)   <= "0000000000000000";
			mem(62)   <= "0000000000000000";
			mem(63)   <= "0000000000000000";
			mem(64)   <= "0000000000000000";
			mem(65)   <= "0000000000000000";
			mem(66)   <= "0000000000000000"; 
			mem(67)   <= "0000000000000000";
			mem(68)   <= "0000000000000000"; 
			mem(69)   <= "0000000000000000";
			mem(70)   <= "0000000000000000";
			mem(71)   <= "0000000000000000";
			mem(72)   <= "0000000000000000";
			mem(73)   <= "0000000000000000";
			mem(74)   <= "0000000000000000"; 
			mem(75)   <= "0000000000000000";
			mem(76)   <= "0000000000000000";
			mem(77)   <= "0000000000000000";
			mem(78)   <= "0000000000000000"; 
			mem(79)   <= "0000000000000000";
			mem(80)   <= "0000000000000000"; 
			mem(81)   <= "0000000000000000";
			mem(82)   <= "0000000000000000";  
			mem(83)   <= "0000000000000000";
			mem(84)   <= "0000000000000000";
			mem(85)   <= "0000000000000000";
			mem(86)   <= "0000000000000000";
			mem(87)   <= "0000000000000000";
			mem(88)   <= "0000000000000000";
			mem(89)   <= "0000000000000000";
			mem(90)   <= "0000000000000000";
			mem(91)   <= "0000000000000000";
			mem(92)   <= "0000000000000000";
			mem(93)   <= "0000000000000000";
			mem(94)   <= "0000000000000000";
			mem(95)   <= "0000000000000000";
			mem(96)   <= "0000000000000000";
			mem(97)   <= "0000000000000000";
			mem(98)   <= "0000000000000000";
			mem(99)   <= "0000000000000000";
			mem(100)  <= "0000000000000000"; 
			mem(101)  <= "0000000000000000";
			mem(102)  <= "0000000000000000"; 
			mem(103)  <= "0000000000000000";
			mem(104)  <= "0000000000000000";
			mem(105)  <= "0000000000000000";
			mem(106)  <= "0000000000000000";
			mem(107)  <= "0000000000000000";
			mem(108)  <= "0000000000000000";
			mem(109)  <= "0000000000000000";
			mem(110)  <= "0000000000000000";
			mem(111)  <= "0000000000000000";
			mem(112)  <= "0000000000000000";
			mem(113)  <= "0000000000000000";
			mem(114)  <= "0000000000000000";
			mem(115)  <= "0000000000000000";
			mem(116)  <= "0000000000000000";
			mem(117)  <= "0000000000000000";
			mem(118)  <= "0000000000000000";
			mem(119)  <= "0000000000000000";
			mem(120)  <= "0000000000000000";
			mem(121)  <= "0000000000000000";
			mem(122)  <= "0000000000000000";
			mem(123)  <= "0000000000000000";
			mem(124)  <= "0000000000000000";
			mem(125)  <= "0000000000000000";
			mem(126)  <= "0000000000000010";
			mem(127)  <= "0000000000000010";			
	else
	    -- read from memory
		if((escrita = '0'))then 
            saida_memoria(15 downto 0) <= mem(to_integer(unsigned(endereco_memoria)));
		-- write in memory		
		elsif ((escrita = '1')) then 		
			mem(to_integer(unsigned(endereco_memoria))) <= entrada_memoria(15 downto 0);
		end if;
	end if;		

						
end process;

end rtl;
